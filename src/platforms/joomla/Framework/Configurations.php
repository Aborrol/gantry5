<?php

/**
 * @package   Gantry5
 * @author    RocketTheme http://www.rockettheme.com
 * @copyright Copyright (C) 2007 - 2015 RocketTheme, LLC
 * @license   GNU/GPLv2 and later
 *
 * http://www.gnu.org/licenses/gpl-2.0.html
 */

namespace Gantry\Framework;

use Gantry\Admin\ThemeList;
use Gantry\Component\Configuration\AbstractConfigurationCollection;
use Gantry\Component\File\CompiledYamlFile;
use Gantry\Component\Filesystem\Folder;
use Gantry\Component\Layout\Layout;
use Gantry\Framework\TemplateInstaller;
use RocketTheme\Toolbox\ResourceLocator\UniformResourceLocator;

class Configurations extends AbstractConfigurationCollection
{
    /**
     * @param string $path
     * @return $this
     */
    public function load($path = 'gantry-config://')
    {
        $gantry = Gantry::instance();

        $styles = ThemeList::getStyles($gantry['theme.name']);

        $layouts = [];
        foreach ($styles as $style) {
            $old = isset($style->params['configuration']) ? $style->params['configuration'] : null;
            if ($old != $style->id) {
                // New style generated by Joomla.
                $this->cloneStyle($style, $old, $style->id);
            }
            $layouts[$style->id] = $style->style;
        }

        asort($layouts);

        $this->items = [
                'default' => 'Base Configuration',
                '_body_only' => 'Body Only',
                '_error' => 'Error',
                '_offline' => 'Offline'
            ] + $layouts;

        return $this;
    }

    protected function cloneStyle($style, $old, $new)
    {
        $gantry = Gantry::instance();

        /** @var UniformResourceLocator $locator */
        $locator = $gantry['locator'];

        $oldPath = $locator->findResource('gantry-config://' . $old, true, true);
        $newPath = $locator->findResource('gantry-config://' . $new, true, true);

        if (file_exists($oldPath)) {
            Folder::copy($oldPath, $newPath);
        }

        $layout = Layout::instance($old);

        // Save layout into custom directory for the current theme.
        $filename = "{$newPath}/layout.yaml";

        $file = CompiledYamlFile::instance($filename);
        $file->settings(['inline' => 20]);
        $file->save(['children' => json_decode($layout->toJson(), true)]);

        $installer = new TemplateInstaller($style->extension_id);
        $installer->updateStyle($new, ['configuration' => $new]);
    }
}
